name: 'AWS SSM Deploy'
description: 'Deploy to EC2 instance using AWS SSM with ECR image'

inputs:
  EC2:
    description: 'EC2 instance ID'
    required: true
  IMAGE:
    description: 'Docker image name'
    required: true
  ECR:
    description: 'ECR repository URL'
    required: true
  PORT:
    description: 'Port to run the container'
    required: true
  WORKDIR:
    description: 'Working directory to run the deployment script'
    required: false
    default: '/home/ec2-user/deploy'
  SCRIPT:
    description: 'Deployment script to run'
    required: false
    default: 'deploy1.sh'

runs:
  using: 'composite'
  steps:
    - name: Deploy using AWS SSM
      shell: bash
      run: |
        COMMAND_ID=$(aws ssm send-command \
          --targets "Key=instanceids,Values=${{ inputs.EC2 }}" \
          --document-name "AWS-RunShellScript" \
          --parameters commands=["cd ${{ inputs.WORKDIR }} && chmod +x ./${{ inputs.SCRIPT }} && ./${{ inputs.SCRIPT }} \
            --image-name ${{ inputs.IMAGE }} \
            --ecr-url ${{ inputs.ECR }} \
            --port ${{ inputs.PORT }} \
            --aws-region ap-northeast-2 \
            --image-tag latest
          "] \
          --comment "Deploy ${{ inputs.ECR }}" \
          --output text \
          --query "Command.CommandId")

        echo "Started deployment with command ID: $COMMAND_ID"

        echo "Waiting for command to complete..."
        aws ssm wait command-executed \
          --command-id "$COMMAND_ID" \
          --instance-id "${{ inputs.EC2 }}"

        COMMAND_STATUS=$(aws ssm get-command-invocation \
          --command-id "$COMMAND_ID" \
          --instance-id "${{ inputs.EC2 }}" \
          --query "Status" \
          --output text)

        if [ "$COMMAND_STATUS" != "Success" ]; then
          echo "Deployment failed with status: $COMMAND_STATUS"
          exit 1
        fi
